@charset "UTF-8";

// This is for WAL imports
@import url('file:///home/vallode/.cache/wal/colors.css');

// SCSS Variables

/* If you do not have WAL uncomment the lines below and comment out the other set
$colour_blue: #443dcc;
$colour_red: #cc4849;
$colour_cyan: #8ab3cc;
$colour_pink: #cc84ac;
*/

$colour_blue: var(--color3);
$colour_red: var(--color6);
$colour_cyan: var(--color9);
$colour_pink: var(--color12);

$colours: $colour_blue, $colour_red, $colour_cyan, $colour_pink, $colour_blue, $colour_red, $colour_cyan, $colour_pink;

// Basics

html,
body {
    margin: 0;
    padding: 0;

    height: 100%;
}

body {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;

    color: var(--color7);
    background-color: var(--color0);
    overflow: hidden;

    box-sizing: border-box;

    font-family: 'Lato', sans-serif;
    letter-spacing: 0.05rem;
}

*, *::before, *::after {
    box-sizing: inherit;
}

// Typography

h1 {
    position: relative;
    align-self: center;
    text-transform: lowercase;

    margin-bottom: 0;
}

a {
    position: relative;
    text-decoration: none;
    color: inherit;
}

ul {
    position: relative;
    display: flex;
    flex-direction: column;
    flex: 1;

    padding: 0.2rem 0.8rem;
    margin: 0.5rem 1rem;

    min-width: 150px;

    list-style-type: none;

    li {
        position: relative;
        z-index: 2;
    }

    @for $i from 1 through 5 {
        li:nth-of-type(#{$i}):hover ~ li.highlight {
            top: calc(19px * #{$i} - 5.5px);
            width: 50px;
            right: 0;
        }
    }

    li.highlight {
        content: '';
        position: absolute;
        width: calc(100% - 1.6rem);
        height: 2px;

        top: -4px;
        right: 0.8rem;
        z-index: -1;

        transition: all 0.225s ease;
    }

    @for $i from 1 through 4 {
        &:nth-of-type(#{$i}) li.highlight {
            opacity: 0.3;
            background-color: nth($colours, $i);
        }

        &:hover li.highlight {
            opacity: 1;
            height: 4px;
            top: -6px;
        }
    }

    @media screen and (max-width: 800px) {
        min-width: 40%;
    }
}

// Layout

main {
    display: flex;
    flex-flow: column wrap;

    z-index: 1;
}

#menu {
    display: flex;
    flex-flow: row wrap;

    text-transform: lowercase;
}

#info {
    display: flex;
    flex-flow: row wrap;

    justify-content: center;

    p {
        font-size: 0.7rem;
        margin: 0 0 0.5rem 0;
        padding: 0 0.5rem;
    }
}

// Animation

#lines,
#back_lines {
    position: fixed;
    top: 0;
    left: 0;

    div {
        position: absolute;
        min-width: 10px;
        width: 3vh;

        border-radius: 4px;

        will-change: transform;
    }
}

#lines {
    filter: brightness(0.8);
    z-index: -1;

    @for $i from 1 through 8 {
        div:nth-child(#{$i}) {
            --height: calc(600px + #{$i} * 30px);
            --offset: calc(var(--height) + 100vh);

            height: var(--height);
            top: calc(0px - var(--height));
            left: calc(45px * #{$i});

            background-color: nth($colours, $i);
            animation: falling#{$i} (random(6) + 2 + s) (random() + s) (cubic-bezier(0, 0, 1, 1)) infinite;

            @keyframes falling#{$i} {
                0% {
                    transform: translate3d(0, 0, 0);
                }

                100% {
                    transform: translate3d(0, var(--offset), 0);
                }
            }
        }
    }
}

#back_lines {
    filter: brightness(0.2);
    z-index: -2;

    @for $i from 1 through 5 {
        div:nth-child(#{$i}) {
            --height: calc(200px + #{$i} * 30px);
            --offset: calc(var(--height) + 100vh);

            height: var(--height);
            width: 1vh;
            top: calc(0px - var(--height));
            left: calc(85px * #{$i});

            background-color: nth($colours, $i);
            animation: back_falling#{$i} (random(2) + 2 + s) (random() + s) (cubic-bezier(0, 0, 1, 1)) infinite;

            @keyframes back_falling#{$i} {
                0% {
                    transform: translate3d(0, 0, 0);
                }

                100% {
                    transform: translate3d(0, var(--offset), 0);
                }
            }
        }
    }
}